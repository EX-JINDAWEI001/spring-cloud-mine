## 1.传统路由配置，需要维护path与url之间的关系，已经过时
zuul.routes.api-a-url.path=/api-a-url/**
zuul.routes.api-a-url.url=http://localhost:9000/
## 本地跳转，将符合api-z规则的路径请求转发到api-gateway中以local为前缀的请求上
zuul.routes.api-z-url.path=/api-z/**
zuul.routes.api-z-url.url=forward:/local

## 2.面向服务的路由配置，将维护path与url的任务交给eureka，只需维护path与serviceId之间的关系
zuul.routes.api-a.path=/api-a/**
zuul.routes.api-a.serviceId=hello-service
zuul.routes.api-b.path=/api-b/**
zuul.routes.api-b.serviceId=feign-consumer
zuul.routes.api-c.path=/api-c/**
zuul.routes.api-c.serviceId=ribbon-consumer

## 3.一种更简洁的面向服务的路由配置
zuul.routes.hello-service=/api-d/**
zuul.routes.feign-consumer=/api-e/**
zuul.routes.ribbon-consumer=/api-f/**



##zuul在集成eureka后，会自动为eureka维护的每个服务创建一个默认的路由规则，如下所示：
#zuul.routes.hello-service.path=/hello-service/**
#zuul.routes.hello-service.serviceId=hello-service
##如果想禁用zuul创建的默认路由规则，可使用如下配置：
#zuul.ignored-services=*
zuul.ignored-services=hello-service,ribbon-consumer


##默认情况下请求头中的cookies在经过zuul网关后将被过滤，无法传入具体微服务，有下面3种配置方式来解决
##1.通过设置全局参数为空来覆盖默认值：
#zuul.sensitiveHeaders=
##2.通过设置指定路由的参数为空来覆盖默认值
#zuul.routes.api-c.sensitiveHeaders=
##3.对指定路由开启自定义敏感头
zuul.routes.api-c.customSensitiveHeaders=true

##zuul中提供以下参数形式来禁用指定过滤器
#zuul.SendErrorFilter.post.disable=true
